PEP8

1 垂直缩进
foo = ong_function_name(var_one, var_two,
						var_three,var_four)
						
2 悬挂缩进
foo = one_function_name(
		var_one,var_two,
		var_three,var_four)
	print '1234'
	
if语句加空格再加表达式，续行缩进最好
if (this_is one_thing and
		that_is_another_thing):
	do_something()
	
右边括号可以另起一行，最好回退
my_list = [
	1,2,3,
	4,5,6
]

空格缩进首选，不允许Tab和空格混用
续行的首选方法是使用小括号，中括号，大括号，其次才是反斜扛

空行
	两行空行分割顶层函数和类的定义
class Sum(object):


	def sum(a,b):
	
		return a+b
	
	类的方法定义用单个空行
	额外的空行可以分割不同的函数组和逻辑块
	
编码一律utf-8

导入一行为一个导入
import os                 yes
import sys,os              no

导入在文件的顶部，在模块注释和文档字符串之后，在模块全局变量和常量之前
导入一般用绝对路径导入，可读性高
导入类的时候如果有名字冲突，那就导包
from myclass import MyClass
objMy = MyClass()
import myclass
objMy = myclass.MyClass()
禁止使用通配符导入 from myclass import *，除对外发布API除外
三引号都用双引号

空格
	括号里边不要空格
	逗号，冒号，分号之前不要空格
	索引操作的冒号前后要有同样的空格或没空格，冒号就没空格吧
	函数调用的左括号前不能有空格
	赋值操作符前后各一个空格，不能乱加空格
	二元运算符两边各一个空格 a + b = c
	优先级高的运算符或操作符前后不建议空格 a + b*c = d
	关键字参数和默认值参数不要加空格 def complex(real,imag=0.0)
	函数注释中, =前后要有空格， ：->前面无空格，后面有空格
	def munge(input: AnyStr)
	def munge(sep: AnyStr = None)
	def munge()-> Anystr:
	
不推荐复合语句
修改代码优先修改注释
注释是完整的句子，是英文
如果注释是断句，首字母应该大写，注释块通常由一个或多个段落组成。段落由完整的句子构成且以.结束后面要有两个空格
注释块通常应用在代码前，并和这些代码有同样的缩进，以#开头并加一个空格
行内注释至少以两个空格隔开

文档符串
	所有公共模块，函数，类和方法书写文档字符串
	""" Return a foobang
	Optional plotz sys to frobnicate the bixbaz first.
	"""
	
版本标签
	放在模块的文档字符串之后，上下各用一个空行
	__version__ = "$Revision$"
	
命名
	缩写使用大写字母
	from M import 不会导入以下划线开头的对象
	后下划线主要是怕与关键词冲突 Tkinter.Toplevel(mster,class_=‘ClassName')
	双前置下划线
	双前双后下划线是magic  __init__
	
	包和模块名小写，可使用下划线  capword/cap_word
	类名 CapWord
	全局变量名应采用__all__防止导入全局变量，或加一个前置下划线
	函数   capword/cap_word
	方法名和实例变量  capword
	非公开和实例主量  _capword
	常量 CAPWORD/CAP_WORD
	
	公开属性没有前导下划线
	公开属性与关键字冲突加后置下划线
	简单的公开数据属性最好只公开属性名，没有复杂的访问和修改，property封装
	不希望子类使用的属性加两个前置下划线
	
编程
	函数没有返回值时返回None
	使用字符串方法而不是string模块
	startwith, endwith来代替切片更好
		if foo.startwith('bar') 
		if foo[:3] == 'bar':
	isinstance()代替对象类型比较
		if isinstance(obj,int):
		if type(obj) is type(1):
	对序列，
		if not seq:
			pass
		if len(seq):
			pass
	字符串后面不要有大量空格
	不要用==进行布尔比较
		if greeting:
			pass
		if greeting == True:
			pass